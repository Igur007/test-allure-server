kind: pipeline
name: test 3.10

platform:
  os: linux
  arch: arm64

trigger:
  ref:
    include:
    - refs/heads/main
    - refs/remotes/origin/main
    - refs/pull/**
    - refs/tags/v**

steps:
#  - name: check style
#    image: igur007/py3106allure:latest
#    pull: if-not-exists
#    commands:
#    - pip3 install invoke
#    - pip3 install uv
#    - inv install-dev
#    - . .venv/bin/activate
#  #  - pre-commit run --all-files
#  #  - inv check-style
#
#  - name: run unit tests
#    image: igur007/py3106allure:latest
#    pull: if-not-exists
#    commands:
#    - pip3 install invoke
#    - . .venv/bin/activate
#    - inv tests-coverage
#    depends_on:
#    - check style

  - name: upload allure results
    image: igur007/py3106allure:latest
    pull: if-not-exists
#    depends_on:
#      - run unit tests
    commands:
    - apt-get update && apt-get install -y zip jq
    - |
      # Zip the allure-results folder
      if [ -d "allure-results" ]; then
        zip -r allure-results.zip allure-results
      else
        echo "allure-results folder not found"
        exit 1
      fi
    - ls -lha
    - pwd
    - |  
      # Upload the zip file to the Allure server
      SERVER=http://10.110.213.220:8080
      UUID=$(curl -X "POST" "$SERVER/api/result" \
       -H 'accept: */*' -H 'Content-Type: multipart/form-data' \
       -F 'allureResults=@allure-results.zip;type=application/zip' | jq -r '.uuid') 
      echo "Result UUID:" $UUID
    - |
      # Generate report based on the uploaded result
      curl -X POST "$SERVER/api/report" \
      -H 'Content-Type: application/json' \
      -H 'accept: */*' \
      -d '{
        "reportSpec": {
          "path": ["string"],
          "executorInfo": {
            "name": "Drone",
            "type": "exectype",
            "url": "",
            "buildOrder": 0,
            "buildName": "",
            "buildUrl": "",
            "reportName": "NEOS",
            "reportUrl": "string"
          }
        },
        "results": ["'"$UUID"'"],
        "deleteResults": true
      }'
